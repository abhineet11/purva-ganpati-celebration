{"version":3,"sources":["assets/gamesh_pic.jpeg","assets/celeb1.jpeg","assets/celeb2.jpeg","assets/celeb3.jpeg","assets/loading.gif","assets/invitation1.jpg","assets/invitation2.jpg","assets/ganpatiSong.mp3","App.js","reportWebVitals.js","index.js"],"names":["buttonConfig","label","id","botConfig","text","audio","ganpatiSong","image","GaneshCeleb1","GaneshCeleb2","GaneshCeleb3","location","link","contribute","blockType","App","useState","GaneshCover","chatData","setChatData","isInput","setInput","currentButtonFlow","setCurrentButtonFlow","userSelection","setUserSelection","userData","setuserData","chatRef","useRef","audioRef","videoRef","useEffect","current","newNode","scrollTop","scrollHeight","src","pause","play","setTimeout","chatLogicHandler","cloneChatData","pop","botObj","push","buttonHandler","e","preventDefault","buttons","filter","buttonFlow","userObj","userSays","typing","className","ref","style","height","map","obj","i","data","dataText","dangerouslySetInnerHTML","__html","data-action","href","target","width","type","video","controls","length","block","onClick","loading","renderChat","placeholder","disabled","slice","config","Button","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2367354a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gamesh_pic.f5957f54.jpeg\";","export default __webpack_public_path__ + \"static/media/celeb1.e0fa0d62.jpeg\";","export default __webpack_public_path__ + \"static/media/celeb2.54bb60f5.jpeg\";","export default __webpack_public_path__ + \"static/media/celeb3.71e0f1b6.jpeg\";","export default __webpack_public_path__ + \"static/media/loading.e8db860b.gif\";","export default __webpack_public_path__ + \"static/media/invitation1.f439e439.jpg\";","export default __webpack_public_path__ + \"static/media/invitation2.aaedc1c8.jpg\";","export default __webpack_public_path__ + \"static/media/ganpatiSong.6b383128.mp3\";","import React, { useState, useEffect, useRef } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport './App.css';\n\nimport GaneshCover from './assets/gamesh_pic.jpeg';\n\nimport GaneshCeleb1 from './assets/celeb1.jpeg';\nimport GaneshCeleb2 from './assets/celeb2.jpeg';\nimport GaneshCeleb3 from './assets/celeb3.jpeg';\n\n// import CoverPic from './assets/cover.jpg';\n// import Image1 from './assets/img1.jpeg';\n// import Image2 from './assets/img2.jpeg';\nimport Invitation1 from './assets/invitation1.jpg';\nimport Invitation2 from './assets/invitation2.jpg';\nimport loading from './assets/loading.gif';\n\nimport ganpatiSong from './assets/ganpatiSong.mp3';\n//import eVideo from './assets/e-video.mp4'\n\nconst buttonConfig = [\n  {\n    label: 'üìÖ When is the Celebration?',\n    id: 'celebration date',\n  },\n  {\n    label: 'Where is the Celebration?',\n    id: 'where date',\n  },\n  {\n    label: 'How can I contribute (Donation)',\n    id: 'contribute',\n  },\n  {\n    label: 'Want to see how we celebrated üòç',\n    id: 'celebration pics',\n  },\n  // {\n  //   label: 'Where do I need to come?',\n  //   id: 'location'\n  // },\n];\n\nconst botConfig = {\n  'celebration date': {\n    text: [\n      `It's a <b>10 days</b> event starting from <b>31st August</b> - <b>9th September</b>.`,\n      `Yeah we know, it's a grand event and we are also planing for regular Aarti, Prashad  followed by <b>Maha-Bhoj</b>!`,\n    ],\n    audio: ganpatiSong,\n  },\n  'where date': {\n    text: [`It's in Purva Skywood <b>Club House</b>.`],\n  },\n  'celebration pics': {\n    image: [GaneshCeleb1, GaneshCeleb2, GaneshCeleb3],\n    text: [`Here you go`],\n  },\n  'reception date': {\n    text: [\n      `It's on the <b>12th</b> of December at <b>Sports assembly, Raniganj</b>`,\n      'you can just follow google maps:',\n    ],\n    location:\n      'https://tars-file-upload.s3.amazonaws.com/ByNADi/e8e72425e745b4a32703175a09276c0a--staticmap.png',\n    link: 'https://goo.gl/maps/qmqbnXyqk1abKGuT9',\n  },\n  // 'location': {\n  //   text: [`It's at <b>Sports assembly, Raniganj</b>`, 'you can just follow google maps:'],\n  //   location: 'https://tars-file-upload.s3.amazonaws.com/ByNADi/e8e72425e745b4a32703175a09276c0a--staticmap.png',\n  //   link: 'https://goo.gl/maps/AA7CtMdjwJcqzzs68'\n  // },\n  contribute: {\n    text: [`Please select your block.`],\n    blockType: [\n      'Block A',\n      'Block B',\n      'Block C',\n      'Block D',\n      'Block E',\n      'Block G',\n      'Block H',\n    ],\n    //video: eVideo\n  },\n  'Block A': {\n    text: [`Block A SPOC`, 'Rashmi Nangia A1304', `<a>rashmiashish20@okicici</a>, <a>9900053705@paytm</a>`],\n  },\n  'Block B': {\n    text: [`Block B SPOC`, 'Shardul Tamane: B207', `<a>9404500900@paytm</a>`],\n  },\n  'Block C': {\n    text: [`Block C SPOC`, 'Anupam Kalia C 1102', `<a>9535194612@paytm</a>`],\n  },\n  'Block D': {\n    text: [`Block D SPOC`, 'Samina D1303', `<a>saminasahoo@okhdfcbank</a>`],\n  },\n  'Block E': {\n    text: [`Block E SPOC`, 'Neha Sharma Rao E002', `<a>nehasharmayz@okhdfcbank</a>, <a>9972091979@paytm</a>`],\n  },\n  'Block G': {\n    text: [`Block G SPOC`, 'Divya Nayar G 1107', `<a>nayardivya79@okicici</a>, <a>9845678165@paytm</a>`],\n  },\n  'Block H': {\n    text: [`Block H SPOC`, 'Tuhina H1801', `<a>9620181138@upi</a>`],\n  }\n};\n\nfunction App() {\n  const [chatData, setChatData] = useState([\n    {\n      image: [GaneshCover],\n      text: [\n        'Hey! üòä',\n        `<b>Skywoodians</b>, are celebrating Ganesh Utsav üêÄ`,\n        'And we want you to be a part of this celebration.',\n      ],\n    },\n  ]);\n\n  const [isInput, setInput] = useState(true);\n  const [currentButtonFlow, setCurrentButtonFlow] = useState(buttonConfig);\n  const [userSelection, setUserSelection] = useState('');\n  const [userData, setuserData] = useState(null);\n\n  const chatRef = useRef(false);\n  const audioRef = useRef(false);\n  const videoRef = useRef(false);\n\n  const renderChat = (data, i) => (\n    <>\n      {i % 2 === 1 ? (\n        <div className=\"user-response\">\n          <div className=\"message user-chat-bubble\">{data.userSays}</div>\n        </div>\n      ) : (\n        <div className=\"bot-response\">\n          <>\n            <div>\n              {data.text &&\n                data.text.map((dataText) => (\n                  <div className=\"message chat-bubble\">\n                    <span dangerouslySetInnerHTML={{ __html: dataText }}></span>\n                  </div>\n                ))}\n              {data.image &&\n                data.image.map((image) => (\n                  <div className=\"message-image\">\n                    <img data-action=\"zoom\" src={image} />\n                  </div>\n                ))}\n              {data.location && (\n                <div className=\"message chat-bubble\">\n                  <a href={data.link} target=\"_blank\">\n                    <img src={data.location} style={{ width: '100%' }} />\n                  </a>\n                </div>\n              )}\n              {data.audio && (\n                <audio ref={audioRef} id=\"audio\">\n                  <source type=\"audio/mpeg\" />\n                </audio>\n              )}\n              {data.video && (\n                <div className=\"video-container\">\n                  <video ref={videoRef} width=\"200\" height=\"240\" controls>\n                    <source src={data.video} type=\"video/mp4\" />\n                  </video>\n                </div>\n              )}\n              {data.blockType && data.blockType.length > 0 && (\n                <div className=\"block-container\">\n                  {data.blockType.map((block) => (\n                    <div className=\"block-bubble\" onClick={(e) => buttonHandler(e, block, block)}>\n                      <span dangerouslySetInnerHTML={{ __html: block }}></span>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {data.typing && (\n                <div className=\"loading chat-bubble\">\n                  <img src={loading} />\n                </div>\n              )}\n            </div>\n          </>\n        </div>\n      )}\n    </>\n  );\n\n  useEffect(() => {\n    if (chatRef.current) {\n      const newNode = chatRef;\n      newNode.current.scrollTop = newNode.current.scrollHeight;\n    }\n  });\n\n  useEffect(() => {\n    if (userSelection === 'celebration date') {\n      audioRef.current.src = ganpatiSong;\n      audioRef.current.pause();\n      audioRef.current.play();\n    }\n  }, [userSelection]);\n\n  const inputHandler = (e) => {\n    setInput(!isInput);\n  };\n\n  useEffect(() => {\n    if (userData) {\n      setTimeout(() => chatLogicHandler(userData), 2000);\n    }\n  }, [userData]);\n\n  const chatLogicHandler = (id) => {\n    const cloneChatData = [...chatData];\n    cloneChatData.pop();\n    const botObj = {\n      ...botConfig[id],\n    };\n    cloneChatData.push(botObj);\n    setChatData(cloneChatData);\n    setUserSelection(id);\n    setInput(!isInput);\n  };\n\n  const buttonHandler = (e, id, label) => {\n    e.preventDefault();\n    const cloneChatData = [...chatData];\n    const buttons = currentButtonFlow.filter(\n      (buttonFlow) => buttonFlow.id !== id\n    );\n    const userObj = {\n      userSays: label,\n    };\n    const botObj = {\n      typing: true,\n    };\n    cloneChatData.push(userObj);\n    cloneChatData.push(botObj);\n    setChatData(cloneChatData);\n    setCurrentButtonFlow(buttons);\n    setuserData(id);\n    setInput(!isInput);\n  };\n\n  return (\n    <div className=\"bot\">\n      <div className=\"bot-container\">\n        <div className=\"bot-section\">\n          <div\n            className=\"bot-messages\"\n            ref={chatRef}\n            style={isInput ? { height: '72%' } : { height: '88%' }}\n          >\n            {chatData.map((obj, i) => renderChat(obj, i))}\n          </div>\n          <div className=\"bot-footer\">\n            <div className=\"bot-input-container\" onClick={inputHandler}>\n              <input\n                type=\"text\"\n                placeholder=\"üëáüèªüëáüèª Choose from below... üëáüèªüëáüèª\"\n                className=\"input\"\n                disabled\n              />\n              <TelegramIcon className=\"input-send\" />\n            </div>\n            {isInput && (\n              <div className=\"bot-button-container\">\n                {currentButtonFlow.slice(0, 2).map((config, i) => (\n                  <Button\n                    type=\"button\"\n                    className=\"button\"\n                    variant=\"contained\"\n                    onClick={(e) => buttonHandler(e, config.id, config.label)}\n                  >\n                    {config.label}\n                  </Button>\n                ))}\n              </div>\n            )}\n            <div className=\"created-by\">\n              Created by :{' '}\n              <a href=\"https://www.facebook.com/abhineet.modi/\" target=\"_blank\">\n                {' '}\n                Abhineet Modi\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}