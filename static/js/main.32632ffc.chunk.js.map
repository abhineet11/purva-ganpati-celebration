{"version":3,"sources":["assets/cover.jpg","assets/img1.jpeg","assets/img2.jpeg","assets/invitation1.jpg","assets/invitation2.jpg","assets/loading.gif","assets/wedding.mp3","App.js","reportWebVitals.js","index.js"],"names":["buttonConfig","label","id","botConfig","text","audio","weddingSong","image","CoverPic","Image1","Image2","location","link","Invitation1","Invitation2","App","useState","chatData","setChatData","isInput","setInput","currentButtonFlow","setCurrentButtonFlow","userSelection","setUserSelection","userData","setuserData","chatRef","useRef","audioRef","videoRef","useEffect","current","newNode","scrollTop","scrollHeight","src","pause","play","setTimeout","chatLogicHandler","cloneChatData","pop","botObj","push","className","ref","style","height","map","obj","i","data","userSays","dataText","dangerouslySetInnerHTML","__html","data-action","href","target","width","type","video","controls","typing","loading","renderChat","onClick","e","placeholder","disabled","slice","config","Button","variant","preventDefault","buttons","filter","buttonFlow","userObj","buttonHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32632ffc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.503a24db.jpg\";","export default __webpack_public_path__ + \"static/media/img1.8fb68f27.jpeg\";","export default __webpack_public_path__ + \"static/media/img2.ea08a180.jpeg\";","export default __webpack_public_path__ + \"static/media/invitation1.f439e439.jpg\";","export default __webpack_public_path__ + \"static/media/invitation2.aaedc1c8.jpg\";","export default __webpack_public_path__ + \"static/media/loading.e8db860b.gif\";","export default __webpack_public_path__ + \"static/media/wedding.b5887c68.mp3\";","import React, {useState, useEffect, useRef} from 'react';\n\nimport { Button } from '@material-ui/core';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport './App.css';\n\nimport CoverPic from './assets/cover.jpg'\nimport Image1 from './assets/img1.jpeg'\nimport Image2 from './assets/img2.jpeg'\nimport Invitation1 from './assets/invitation1.jpg'\nimport Invitation2 from './assets/invitation2.jpg'\nimport loading from './assets/loading.gif'\n\nimport weddingSong from './assets/wedding.mp3'\n//import eVideo from './assets/e-video.mp4'\n\nconst buttonConfig = [\n    {\n      label: 'üìÖ When is the wedding?',\n      id: 'wedding date' \n    },\n    {\n      label: 'When is the Haldi?',\n      id: 'haldi date'\n    },\n    {\n      label: 'When is the Reception?',\n      id: 'reception date'\n    },\n    {\n      label: 'Invitation Card',\n      id: 'invitation'\n    },\n    {\n      label: 'Want to see your pics üòç',\n      id: 'personal pics'\n    },\n    // {\n    //   label: 'Where do I need to come?',\n    //   id: 'location'\n    // },  \n]\n\nconst botConfig = {\n  'wedding date': {\n    text: [`It's on the <b>10th</b> of December.`, `Yeah we know, it's less than even a month and we are super nervous!`],\n    audio:  weddingSong\n  },\n  'haldi date': {\n    text: [`It's on the <b>9th</b> of December.`]\n  },\n  'personal pics': {\n    image: [CoverPic, Image1, Image2],\n    text: [`Here you go`],\n  },\n  'reception date': {\n    text: [`It's on the <b>12th</b> of December at <b>Sports assembly, Raniganj</b>`, 'you can just follow google maps:'],\n    location: 'https://tars-file-upload.s3.amazonaws.com/ByNADi/e8e72425e745b4a32703175a09276c0a--staticmap.png',\n    link: 'https://goo.gl/maps/qmqbnXyqk1abKGuT9'\n  },\n  // 'location': {\n  //   text: [`It's at <b>Sports assembly, Raniganj</b>`, 'you can just follow google maps:'],\n  //   location: 'https://tars-file-upload.s3.amazonaws.com/ByNADi/e8e72425e745b4a32703175a09276c0a--staticmap.png',\n  //   link: 'https://goo.gl/maps/AA7CtMdjwJcqzzs68'\n  // },\n  'invitation': {\n    text: [`We may not have it all together, but together we have it all.`],\n    image: [Invitation1, Invitation2],\n    //video: eVideo\n  }\n}\n\nfunction App() {\n  const [chatData, setChatData] = useState([\n    {\n        image: [CoverPic],\n        text: ['Hey! üòä', `We, <b>Narendra</b> and <b>Payel</b> are getting married. üíç`, 'And we want you to be a part of this celebration as we take the next step together.']\n    }\n    ]\n  )\n\n  const [isInput, setInput] = useState(true);\n  const [currentButtonFlow, setCurrentButtonFlow] = useState(buttonConfig)\n  const [userSelection, setUserSelection] = useState('');\n  const [userData, setuserData] = useState(null)\n\n   const chatRef = useRef(false)\n   const audioRef = useRef(false)\n   const videoRef = useRef(false)\n   \n  const renderChat = (data, i) => (\n    <>\n        {i % 2 === 1 ? (\n            <div className=\"user-response\">\n              <div className=\"message user-chat-bubble\">{data.userSays}</div>\n            </div>\n        ) : (\n            <div className=\"bot-response\">\n                <> \n                  <div >\n                      {data.text  && data.text.map((dataText) => <div className=\"message chat-bubble\">\n                            <span dangerouslySetInnerHTML={{__html: dataText}}></span>    \n                          </div>)\n                      }\n                      {data.image  && data.image.map((image) => <div className=\"message-image\">\n                          <img data-action=\"zoom\" src={image}/>    \n                        </div>)\n                      }\n                      {data.location && <div className=\"message chat-bubble\">\n                        <a href={data.link} target=\"_blank\">\n                          <img src={data.location} style={{width: '100%'}}/>\n                        </a>\n                          \n                        </div>\n                      }\n                      {data.audio && <audio ref={audioRef} id=\"audio\">\n                        <source type=\"audio/mpeg\"/>\n                      </audio>}\n                      {data.video && <div className=\"video-container\">\n                          <video ref={videoRef} width=\"200\" height=\"240\" controls>\n                            <source src={data.video} type=\"video/mp4\" />\n                          </video>\n                        </div>\n                      }\n\n                      {data.typing && <div className=\"loading chat-bubble\">\n                          <img src={loading}/>\n                        </div>}\n                  </div>\n                </>\n             </div>\n           \n        )}\n    </>\n  )\n\n  useEffect(() => {\n    if(chatRef.current) {\n      const newNode = chatRef\n       newNode.current.scrollTop= newNode.current.scrollHeight\n    }\n  })\n\n\n  useEffect(() => { \n    if(userSelection === 'wedding date') {\n      audioRef.current.src = weddingSong;\n      audioRef.current.pause();\n      audioRef.current.play();\n    }\n   \n  }, [userSelection])\n\n  const inputHandler = (e) => {\n    setInput(!isInput)\n  }\n\n  useEffect(() => {\n    if(userData) {\n      setTimeout(() => chatLogicHandler(userData), 2000)\n    }\n  }, [userData])\n\n  const chatLogicHandler = ( id ) => {\n    const cloneChatData = [...chatData];\n    cloneChatData.pop()\n    const botObj = {\n      ...botConfig[id]\n    }\n    cloneChatData.push(botObj)\n    setChatData(cloneChatData)\n    setUserSelection(id)\n    setInput(!isInput)\n  }\n\n  const buttonHandler = (e, id, label) => {\n    e.preventDefault();\n    const cloneChatData = [...chatData];\n    const buttons = currentButtonFlow.filter((buttonFlow) => buttonFlow.id !== id)\n    const userObj = {\n      userSays: label\n    } \n    const botObj = {\n      typing: true\n    }\n    cloneChatData.push(userObj)\n    cloneChatData.push(botObj)\n    setChatData(cloneChatData)\n    setCurrentButtonFlow(buttons)\n    setuserData(id)\n    setInput(!isInput)\n  }\n\n  return (\n    <div className=\"bot\">\n      <div className=\"bot-container\">\n        <div className=\"bot-section\">\n          <div className=\"bot-messages\" ref={chatRef} style={isInput ? { height: '72%'} : {height: '88%'}}> \n              {chatData.map((obj, i) => renderChat(obj, i))}\n          </div>\n          <div className=\"bot-footer\">\n            <div className=\"bot-input-container\" onClick={inputHandler}>\n              <input\n                type=\"text\" \n                placeholder=\"üëáüèªüëáüèª Choose from below... üëáüèªüëáüèª\"\n                className=\"input\"\n                disabled\n              />\n              <TelegramIcon className=\"input-send\"/>\n            </div>\n            {isInput && <div className=\"bot-button-container\">\n              {currentButtonFlow.slice(0,2).map((config, i) => (\n                <Button \n                  type=\"button\"\n                  className=\"button\" \n                  variant=\"contained\"\n                  onClick={(e) => buttonHandler(e, config.id, config.label)}\n                >\n                    {config.label}\n                </Button>\n              ))}\n            </div>}\n            <div className=\"created-by\">Created by : <a href=\"https://www.facebook.com/abhineet.modi/\" target=\"_blank\"> Abhineet Modi</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}